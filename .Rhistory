tabl
library(ltm)
library(ltm)
library(eRm)
library(here)
library(tidyverse)
dat <- read.table("Assign2.dat", header = F)
dat <- dat[which(apply(dat, 1, var) > 0),] #apply variance function on each col of dat(1 = row, 2 = column)
apply(dat, 2, var)
n <- nrow(dat)
dat$id <- factor(1:n)
datlong <- gather(data = dat, key = "item", value = y, V1:V15, factor_key = TRUE)
datlong
m1 <- readRDS(""fixed_effects_rasch_ass2.RData"")
m1 <- readRDS("fixed_effects_rasch_ass2.RData")
m1 <- load("fixed_effects_rasch_ass2.RData")
totals <- 15:0
coef <- m1$coefficients # %>% scale(center=TRUE) # first we need the coefficients
m1
load("fixed_effects_rasch_ass2.RData")
m1
coef <- m1$coefficients # %>% scale(center=TRUE) # first we need the coefficients
coef <- coef[-((1583-15):1583)] #remove item parameters, which are the last 15 entries in the list of coefficients
unique_coef <- unique(round(coef, digits=4)) #We can use the unique values because of sufficiency
par <- unique_coef[1] + unique_coef[2:15] #the first value is the intercept, so we add it to each coefficient. And we only need the values from 2-15
par <- sort(par, decreasing=T)
par <- append(par, NA, after=0)
par <- append(par, NA, after=15)
par <- as.data.frame(par)
tabl <- cbind(totals, par)
tabl
dat <- read.table("Assign2.dat", header = F)
tots <- rowSums(dat)
table(tots)
m2 <- rasch(dat)
coef.rasch(m2)
summary(m2)
m2 <- rasch(dat)
coef.rasch(m2)
summary(m2)
GoF.rasch(m2)
m2.1 <- ltm(dat ~ z1)
anova(m2,m2.1)
fscores <- factor.scores(m2, method = "EAP", resp.patterns = dat[,1:15]) #get all EAPs
fscores <- fscores$score.dat
fscores$totals <- rowSums(fscores[1:15]) #get rowsum of all observed score patters
fscores_unique <- subset(fscores, !duplicated(fscores$tot)) #remove those rows with a total score that was already observed in dataframe, meaning we only keep the first instance of a total score (the z1s are the same for other patterns with the same score)
#add to table
table_EAP <- fscores_unique[,c("totals", "z1")]
tabl <- merge(tabl, table_EAP, by = "totals")
tabl
dat <- read.table("Assign2.dat", header = F)
tots <- rowSums(dat)
table(tots)
n <- nrow(dat)
fr <- rep(1, n)
dat <- cbind(dat, fr)
head(dat)
datagg <- aggregate(fr~.,data=dat,sum)
datagg
# next, get the total score of each pattern in datagg
y <- rowSums(datagg[,1:15])
y
datagg
c2 <- choose(y, 2)
c2
#then, we need c2-c15
c2 <- choose(y, 2)
c3 <- choose(y, 3)
c4 <- choose(y, 4)
c5 <- choose(y, 5)
c6 <- choose(y, 6)
c7 <- choose(y, 7)
c8 <- choose(y, 8)
c10 <- choose(y,10)
c11 <- choose(y, 11)
c12 <- choose(y, 12)
c14 <- choose(y, 14)
c15 <- choose(y, 15)
c <- cbind(c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15)
c9 <- choose(y, 9)
c <- cbind(c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15)
c13 <- choose(y, 13)
c <- cbind(c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15)
c
datagg <- cbind(datagg, c)
datagg
m3 <- glm(fr~., family = poisson, data = datagg)
summary(m3)
pear1 <- sum(residuals(m3, type = "pearson")^2)
pchisq(pear1, m3$df.residual, lower.tail = F)
#get the binomial coefficients
a<-c()
for (i in 2:15){
b<-choose(yy, i)
a<-cbind(a,b)
}
for (i in 2:15){
b<-choose(y, i)
a<-cbind(a,b)
}
colnames(a) <- paste0("c", seq(from=2, to=15))
a
c
datagg <- cbind(datagg, a)
datagg <- aggregate(fr~.,data=dat,sum)
# next, get the total score of each pattern in datagg
y <- rowSums(datagg[,1:15])
#get the binomial coefficients
a<-c()
for (i in 2:15){
b<-choose(y, i)
a<-cbind(a,b)
}
colnames(a) <- paste0("c", seq(from=2, to=15))
datagg <- cbind(datagg, a)
m3 <- glm(fr~., family = poisson, data = datagg)
summary(m3)
m4 <- glm(fr~(--c15), family = poisson, data = datagg)
m4
summary(m4)
m4 <- glm(fr~(.-c15), family = poisson, data = datagg)
summary(m4)
pear2 <- sum(residuals(m4, type = "pearson")^2)
pchisq(pear2, m4$df.residual, lower.tail = F)
anova(m3,m4)
anova(m4,m3)
anova(m3)
anova(m3, test = "Chisq")
anova(m4, m3, test = "LRT")
anova(m3, test = "Chisq")
return(result)}
return(result)}
pearson <- function(model){
pear1 <- sum(residuals(model, type = "pearson")^2)
result <- pchisq(pear1, model$df.residual, lower.tail = F)
return(result)}
pearson(m3)
m5 <- glm(fr~(.-c15, -c14), family = poisson, data = datagg)
m5 <- glm(fr~(.-c15 -c14), family = poisson, data = datagg)
summary(m5)
m4 <- glm(fr~(.-c15), family = poisson, data = datagg)
pearson(m4)
m5 <- glm(fr~(.-c15 -c14), family = poisson, data = datagg)
pearson(m5)
pearson <- function(model){
pear1 <- sum(residuals(model, type = "pearson")^2)
result <- pchisq(pear1, model$df.residual, lower.tail = F)
text <- c("goodness of fit test for ", model)
return(text, result)}
pearson(m3)
pearson <- function(model){
pear1 <- sum(residuals(model, type = "pearson")^2)
result <- pchisq(pear1, model$df.residual, lower.tail = F)
text <- c("goodness of fit test for ", model)
print(text, result)}
pearson(m3)
pearson <- function(model){
pear1 <- sum(residuals(model, type = "pearson")^2)
result <- pchisq(pear1, model$df.residual, lower.tail = F)
text <- c("goodness of fit test for ", deparse(substitute(model)))
print(text, result)}
pearson(m3)
pearson <- function(model){
pear1 <- sum(residuals(model, type = "pearson")^2)
result <- pchisq(pear1, model$df.residual, lower.tail = F)
text <- c("goodness of fit test for ", deparse(substitute(model)))
print(c(text, result))}
pearson(m3)
pearson <- function(model){
pear1 <- sum(residuals(model, type = "pearson")^2)
result <- pchisq(pear1, model$df.residual, lower.tail = F)
text <- c("goodness of fit test for "+ deparse(substitute(model)))
print(c(text, result))}
pearson(m3)
pearson <- function(model){
pear1 <- sum(residuals(model, type = "pearson")^2)
result <- pchisq(pear1, model$df.residual, lower.tail = F)
text <- c("goodness of fit test for ", deparse(substitute(model)))
print(c(text, result))}
pearson(m3)
pearson <- function(model){
pear1 <- sum(residuals(model, type = "pearson")^2)
result <- pchisq(pear1, model$df.residual, lower.tail = F)
text <- paste("goodness of fit test for ", deparse(substitute(model)), result)
print(c(text, result))}
pearson(m3)
pearson <- function(model){
pear1 <- sum(residuals(model, type = "pearson")^2)
result <- pchisq(pear1, model$df.residual, lower.tail = F)
text <- paste("goodness of fit test for", deparse(substitute(model)),":", result)
print(c(text, result))}
pearson(m3)
pearson <- function(model){
pear1 <- sum(residuals(model, type = "pearson")^2)
result <- pchisq(pear1, model$df.residual, lower.tail = F)
text <- paste("p-value for", deparse(substitute(model)),":", result)
print(text)}
pearson(m3)
m4 <- glm(fr~(.-c15), family = poisson, data = datagg)
pearson(m4)
m5 <- glm(fr~(.-c15 -c14), family = poisson, data = datagg)
pearson(m5)
m6 <- glm(fr~(.-c15 -c14-c13), family = poisson, data = datagg)
pearson(m6)
m7 <- glm(fr~(.-c15 -c14-c13-c12), family = poisson, data = datagg)
pearson(m7)
m8 <- glm(fr~(.-c15 -c14-c13-c12-c11), family = poisson, data = datagg)
pearson(m8)
m9 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10), family = poisson, data = datagg)
pearson(m9)
m10 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10-c9), family = poisson, data = datagg)
pearson(m10)
m11 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10-c9-c8), family = poisson, data = datagg)
pearson(m11)
m12 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10-c9-c8-c7), family = poisson, data = datagg)
pearson(m12)
m13 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10-c9-c8-c7-c6), family = poisson, data = datagg)
pearson(m13)
m14 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10-c9-c8-c7-c6-c5), family = poisson, data = datagg)
pearson(m14)
m15 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10-c9-c8-c7-c6-c5-c4), family = poisson, data = datagg)
pearson(m15)
pearson <- function(model){
pear1 <- sum(residuals(model, type = "pearson")^2)
result <- pchisq(pear1, model$df.residual, lower.tail = F)
result <- round(result, digits = 3)
text <- paste("p-value for", deparse(substitute(model)),":", result)
print(text)}
pearson(m3)
m4 <- glm(fr~(.-c15), family = poisson, data = datagg)
pearson(m4)
m5 <- glm(fr~(.-c15 -c14), family = poisson, data = datagg)
pearson(m5)
m6 <- glm(fr~(.-c15 -c14-c13), family = poisson, data = datagg)
pearson(m6)
m7 <- glm(fr~(.-c15 -c14-c13-c12), family = poisson, data = datagg)
pearson(m7)
m8 <- glm(fr~(.-c15 -c14-c13-c12-c11), family = poisson, data = datagg)
pearson(m8)
m9 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10), family = poisson, data = datagg)
pearson(m9)
m10 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10-c9), family = poisson, data = datagg)
pearson(m10)
m11 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10-c9-c8), family = poisson, data = datagg)
pearson(m11)
m12 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10-c9-c8-c7), family = poisson, data = datagg)
pearson(m12)
m13 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10-c9-c8-c7-c6), family = poisson, data = datagg)
pearson(m13)
m14 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10-c9-c8-c7-c6-c5), family = poisson, data = datagg)
pearson(m14)
m15 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10-c9-c8-c7-c6-c5-c4), family = poisson, data = datagg)
pearson(m15)
pearson <- function(model){
pear1 <- sum(residuals(model, type = "pearson")^2)
result <- pchisq(pear1, model$df.residual, lower.tail = F)
result <- round(result, digits = 5)
text <- paste("p-value for", deparse(substitute(model)),":", result)
print(text)}
pearson(m3)
m4 <- glm(fr~(.-c15), family = poisson, data = datagg)
pearson(m4)
m5 <- glm(fr~(.-c15 -c14), family = poisson, data = datagg)
pearson(m5)
m6 <- glm(fr~(.-c15 -c14-c13), family = poisson, data = datagg)
pearson(m6)
m7 <- glm(fr~(.-c15 -c14-c13-c12), family = poisson, data = datagg)
pearson(m7)
m8 <- glm(fr~(.-c15 -c14-c13-c12-c11), family = poisson, data = datagg)
pearson(m8)
m9 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10), family = poisson, data = datagg)
pearson(m9)
m10 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10-c9), family = poisson, data = datagg)
pearson(m10)
m11 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10-c9-c8), family = poisson, data = datagg)
pearson(m11)
m12 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10-c9-c8-c7), family = poisson, data = datagg)
pearson(m12)
m13 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10-c9-c8-c7-c6), family = poisson, data = datagg)
pearson(m13)
m14 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10-c9-c8-c7-c6-c5), family = poisson, data = datagg)
pearson(m14)
m15 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10-c9-c8-c7-c6-c5-c4), family = poisson, data = datagg)
pearson(m15)
summary(m14)
m4 <- glm(fr~(.-c15), family = poisson, data = datagg)
pearson(m4)
m5 <- glm(fr~(.-c15 -c14), family = poisson, data = datagg)
pearson(m5)
m6 <- glm(fr~(.-c15 -c14-c13), family = poisson, data = datagg)
pearson(m6)
m7 <- glm(fr~(.-c15 -c14-c13-c12), family = poisson, data = datagg)
pearson(m7)
m8 <- glm(fr~(.-c15 -c14-c13-c12-c11), family = poisson, data = datagg)
pearson(m8)
m9 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10), family = poisson, data = datagg)
pearson(m9)
m10 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10-c9), family = poisson, data = datagg)
pearson(m10)
m11 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10-c9-c8), family = poisson, data = datagg)
pearson(m11)
m12 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10-c9-c8-c7), family = poisson, data = datagg)
pearson(m12)
m13 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10-c9-c8-c7-c6), family = poisson, data = datagg)
pearson(m13)
m14 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10-c9-c8-c7-c6-c5), family = poisson, data = datagg)
pearson(m14)
m15 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10-c9-c8-c7-c6-c5-c4), family = poisson, data = datagg)
pearson(m15)
m16 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10-c9-c8-c7-c6-c5-c4-c3), family = poisson, data = datagg)
pearson(m16)
m17 <- glm(fr~(.-c15 -c14-c13-c12-c11-c10-c9-c8-c7-c6-c5-c4-c3-c2), family = poisson, data = datagg)
pearson(m17)
y
totals
m14$coefficients$c4
m14$coefficients["c4"]
m14$coefficients["c2"]
y <- 0:15
EAPexrasch <- m14$coefficients["c2"] * (y - (1/2))
EAPexrasch
y <- 0:15
EAP.exrasch <- m14$coefficients["c2"] * (y - (1/2))
EAP.exrasch
EAPexrasch <- data.frame(totals = y, EAP.exrasch = EAP.exrasch)
EAPexrasch
EAP.exrasch
y <- 0:15
EAP.exrasch <- m14$coefficients["c2"] * (y - (1/2))
EAPexrasch <- data.frame(totals = y, EAP.exrasch = EAP.exrasch)
tabl <- merge(tabl, EAPexrasch, by = "totals")
tabl
plot(EAP.exrasch, y)
plot(tabl$par, tabl$z1)
plot(tabl$par, tabl$EAP.exrasch)
plot(tabl$z1, tabl$EAP-exrasch)
plot(tabl$z1, tabl$EAP.exrasch)
plot(EAP.exrasch, y)
plot(tabl$par, tabl$z1)
plot(tabl$par, tabl$EAP.exrasch)
plot(EAP.exrasch, y)
plot(tabl$par, tabl$z1)
plot(tabl$par, tabl$EAP.exrasch)
plot(tabl$par, tabl$z1)
plot(tabl$par, tabl$EAP.exrasch)
plot(tabl$z1, tabl$EAP.exrasch)
